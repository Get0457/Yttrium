# This is a basic workflow to help you get started with Actions

name: Yttrium

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
  
    strategy:
      matrix:
        configuration: [Debug, Release]
        platform: [x64, arm64]
        
    # The type of runner that the job will run on
    runs-on: windows-latest

    env:
      ZIP_FILE: Yttrium-${{ matrix.platform }}-${{ matrix.configuration }}.zip
      MSIX_FILE: Yttrium-${{ matrix.platform }}-${{ matrix.configuration }}.msixbundle
      RELEASE_DIR: Release
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Build the application
        run: msbuild Yttrium\Yttrium.csproj /restore /p:Configuration=$env:Configuration /p:Platform=$env:Platform /p:ReleaseDirectory=..\$env:RELEASE_DIR /p:ZipName=$env:ZIP_FILE /t:ReleaseZip
        env:
         Configuration: ${{ matrix.configuration }}
         Platform: ${{ matrix.platform }}

      - name: Upload Release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ZIP_FILE }}
          path: ${{ env.RELEASE_DIR }}\${{ env.ZIP_FILE }}
          if-no-files-found: error

      - name: Clean Yttrium
        run: msbuild Yttrium.sln /p:Configuration=$env:Configuration /p:Platform=$env:Platform /t:Clean
        env:
         Configuration: ${{ matrix.configuration }}
         Platform: ${{ matrix.platform }}

      - name: Upload MSIX
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.MSIX_FILE }}
          path: ${{ env.RELEASE_DIR }}\${{ env.MSIX_FILE }}
          if-no-files-found: error
